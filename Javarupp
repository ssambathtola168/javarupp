//java frame
package AwTLayout;
import java.awt.Button;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.Panel;

class  DemoGrid extends  Frame {
    Button bt1,bt2,bt3,bt4,bt5,bt6;
    public DemoGrid(){
    Panel  p= new Panel();
    p.setLayout(new GridLayout(3,2));
    bt1 = new Button ("one");
    p.add(bt1);
    bt2=new Button("Thera");
    p.add(bt2);
    bt3=new Button ("tola");
    p.add(bt3);
    bt4= new Button("raksa");
    p.add(bt4);
bt5= new Button("toro");
p.add(bt5);
bt6 =new Button ("kokar");
p.add(bt6);
add(p);
setSize(300,400);
setLocationRelativeTo(null);
setVisible(true);
}
public static void main (String []args)
{
        DemoGrid demoGrid = new DemoGrid();
}
}







code




/*package listdelete;
imoport java.util.ArrayList;
inport java.util.List;
public class Student {
    int id;
    String name;
    int age;
    public Student(intid,String name,int age){
        this.id=id;
        this.name=name;
        this.age=age;
    }
    public Student(){ return name;}
    public void setAge(int age){this.age=age;}
    public String toString(){

    }
}
 public class ListDeleteDemo {
    public static void DeleteByName(List<Student>Student,String,String name){
        student.removeif(stu -> stu.getName().equalsIgnorecase(name)));

    }
    public static void main(String[] args) {
        ArrayList<Student><Student =new ArrayList();
        Students.add(new Student(3,"KIM HENG",20));
        Students.add(new Student(1,"song Heng,20"));
        System.out s:students)
        System.out.println(s);
deleteByName(students,"KIM HENG");
System.out.println(\"Nout Afther Delete :");
student.forEach(System.out::println);
    }
 }
///newcode
package Listdeleteara;
import java.util.ArrayList;
import java.util.List;

public class Student {
    int id;
    String name;
    int age;

    // Constructor
    public Student(int id, String name, int age) {
        this.id = id;
        this.name = name;
        this.age = age;
    }

    // Default constructor
    public Student() {}

    // Getter and Setter methods
    public String getName() {
        return name;
    }

    public void setAge(int age) {
        this.age = age;
    }

    // Overriding toString() for meaningful output
    @Override
    public String toString() {
        return "Student{id=" + id + ", name='" + name + "', age=" + age + "}";
    }
}

class ListDeleteDemo {

    // Method to delete a student by name
    public static void deleteByName(List<Student> students, String name) {
        students.removeIf(stu -> stu.getName().equalsIgnoreCase(name));
    }

    public static void main(String[] args) {
        // Create a list of students
        ArrayList<Student> students = new ArrayList<>();
        students.add(new Student(3, "KIM HENG", 20));
        students.add(new Student(1, "Song Heng", 20));

        // Display the list of students before deletion
        System.out.println("Before Deletion:");
        students.forEach(System.out::println);

        // Delete student by name
        deleteByName(students, "KIM HENG");

        // Display the list after deletion
        System.out.println("\nAfter Deletion:");
        students.forEach(System.out::println);
    }
}

eng

import java.util.Scanner;

public class Main {
    
static void  Sort(float arr[],int n){ 
    float tmp;
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            if(arr[i]<arr[j]){
                tmp=arr[i];
                arr[i]=arr[j];
                arr[j]=tmp;
            }
        }  
        
    
    
}
    }
static void input(float arr[],int n){
    Scanner sc=new Scanner(System.in);
        for(int i=0;i<n;i++){
            System.out.println("input number "+(i+1)+" : ");
          arr[i]=sc.nextFloat();
        }   
    static void output(float arr[],int n){
        for(int i=0;i<n;i++){
            System.out.print(arr[i]+" ");

        }
    }





class arrayy Obj 
public class Mainn {
    int v;

    // Default constructor
    public Mainn() {
        v = 5; // Initialize 'v' to 5
    }

    // Constructor with one parameter
    public Mainn(int value) {
        v = value; // Initialize 'v' with the passed value
    }

    public static void main(String[] args) {
        Mainn myOjb1 = new Mainn(); // Calls the default constructor
        Mainn myOjb2 = new Mainn(10); // Calls the constructor with an integer parameter

        System.out.println(myOjb1.v); // Prints '5'
        System.out.println(myOjb2.v); // Prints '10'
    }
}

    
  public static void main(String[] args) {
      int n;
      Scanner sc =new Scanner(System.in);
      System.out.println("Input n element : ");
      n=sc.nextInt();
      float arr[]=new float[n];
      input(arr,n);
      output(arr,n);
      Sort(arr,n);
     output(arr,n);
      
  }
}
//coderror
package exceptionsl;
import java.util.List;
import java.util.Scanner;
import.util.Scanner;
public class Student {
    private String name;
    private String sex;
    public Student(String name,String sex) {
        if9!sex.equals("M") && ! sex.equals("F)){
            throw. new IllegalChannelGroupException("Invalid sex value !");
    }
    this.name=name;
    this.sex =sex;
    thi
}
public String getsex(){sex;}
public String toSting ( {
    return "Student" {
        name '" + "', sex = '" + sex" + } ";
    }
}
public class  StudnrtDemoo{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        try {
            System.out.print("Enter Student Name :");
            String name = sc.nextLine();
            System.out.print("Enetr sex (M,F):");
            String sex = sc.nex( Student(name, sex);
            System.out.ptint("Student created :" +st);
        }
        catch("IllegalArumentExcetion e"){
                System.out.println("Erro : + e.getMessage(();
        }
        finally{
            sc.close();
        }
    }
}
eng
